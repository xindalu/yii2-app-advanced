<?php

namespace api\controllers;

use yii\rest\ActiveController;
use yii\helpers\ArrayHelper;
use yii\filters\auth\CompositeAuth;
//use yii\filters\auth\HttpBasicAuth;
use yii\filters\auth\HttpBearerAuth;
//use yii\filters\auth\QueryParamAuth;
use yii\web\Response;
use Yii;

class ApiController extends ActiveController
{
    public $post = null;
    public $get = null;
    public $user = null;
    public $userId = null;

    // Serialize response data
    public $serializer = [
        'class' => 'yii\rest\Serializer',
        'collectionEnvelope' => 'items',
    ];

    /**
     * GET http://api.eoa.com/v1/users?access-token=123
     */
    public function behaviors() {
        // 数据返回类型设置
        // $behaviors['contentNegotiator']['formats']['application/json'] = 'json';
        // $behaviors['contentNegotiator']['formats']['application/xml'] = 'json';
        return ArrayHelper::merge (parent::behaviors(), [
            'authenticator' => [
                // CompositeAuth is an action filter that supports multiple authentication methods at the same time
                'class' => CompositeAuth::className(),
                'authMethods' => [
//                    HttpBasicAuth::className(),
                    HttpBearerAuth::className(),
//                    QueryParamAuth::className(),
                ],
            ],
            'contentNegotiator' => [
                'formats' => [
                    'text/html' => Response::FORMAT_JSON,
                ],
            ],
        ]);
    }

    public function beforeAction($action)
    {
        $this->post = Yii::$app->request->post();
        $this->get = Yii::$app->request->get();
        $this->user = Yii::$app->user->identity;
        $this->userId = Yii::$app->user->id;

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }
}
